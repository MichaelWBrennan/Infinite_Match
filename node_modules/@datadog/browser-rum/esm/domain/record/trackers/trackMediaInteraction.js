import { addEventListeners } from '@datadog/browser-core';
import { NodePrivacyLevel, getNodePrivacyLevel } from '@datadog/browser-rum-core';
import { IncrementalSource, MediaInteractionType } from '../../../types';
import { getEventTarget } from '../eventsUtils';
import { assembleIncrementalSnapshot } from '../assembly';
export function trackMediaInteraction(configuration, scope, mediaInteractionCb) {
    return addEventListeners(configuration, document, ["play" /* DOM_EVENT.PLAY */, "pause" /* DOM_EVENT.PAUSE */], (event) => {
        const target = getEventTarget(event);
        if (!target) {
            return;
        }
        const id = scope.nodeIds.get(target);
        if (id === undefined ||
            getNodePrivacyLevel(target, configuration.defaultPrivacyLevel) === NodePrivacyLevel.HIDDEN) {
            return;
        }
        mediaInteractionCb(assembleIncrementalSnapshot(IncrementalSource.MediaInteraction, {
            id,
            type: event.type === "play" /* DOM_EVENT.PLAY */ ? MediaInteractionType.Play : MediaInteractionType.Pause,
        }));
    }, {
        capture: true,
        passive: true,
    });
}
//# sourceMappingURL=trackMediaInteraction.js.map