import type { ClocksState, Duration } from '@datadog/browser-core';
import type { LifeCycle } from '../lifeCycle';
import { VitalType } from '../../rawRumEvent.types';
import type { PageStateHistory } from '../contexts/pageStateHistory';
export interface VitalOptions {
    context?: any;
    description?: string;
}
export type DurationVitalOptions = VitalOptions;
export interface FeatureOperationOptions extends VitalOptions {
    operationKey?: string;
}
export type FailureReason = 'error' | 'abandoned' | 'other';
export interface AddDurationVitalOptions extends DurationVitalOptions {
    startTime: number;
    duration: number;
}
export interface DurationVitalReference {
    __dd_vital_reference: true;
}
export interface DurationVitalStart extends DurationVitalOptions {
    name: string;
    startClocks: ClocksState;
}
interface BaseVital extends VitalOptions {
    name: string;
    startClocks: ClocksState;
}
export interface DurationVital extends BaseVital {
    type: typeof VitalType.DURATION;
    duration: Duration;
}
export interface OperationStepVital extends BaseVital {
    type: typeof VitalType.OPERATION_STEP;
    stepType: 'start' | 'end';
    operationKey?: string;
    failureReason?: string;
}
export interface CustomVitalsState {
    vitalsByName: Map<string, DurationVitalStart>;
    vitalsByReference: WeakMap<DurationVitalReference, DurationVitalStart>;
}
export declare function createCustomVitalsState(): {
    vitalsByName: Map<string, DurationVitalStart>;
    vitalsByReference: WeakMap<DurationVitalReference, DurationVitalStart>;
};
export declare function startVitalCollection(lifeCycle: LifeCycle, pageStateHistory: PageStateHistory, customVitalsState: CustomVitalsState): {
    addOperationStepVital: (name: string, stepType: "start" | "end", options?: FeatureOperationOptions, failureReason?: FailureReason) => void;
    addDurationVital: (vital: DurationVital) => void;
    startDurationVital: (name: string, options?: DurationVitalOptions) => DurationVitalReference;
    stopDurationVital: (nameOrRef: string | DurationVitalReference, options?: DurationVitalOptions) => void;
};
export declare function startDurationVital({ vitalsByName, vitalsByReference }: CustomVitalsState, name: string, options?: DurationVitalOptions): DurationVitalReference;
export declare function stopDurationVital(stopCallback: (vital: DurationVital) => void, { vitalsByName, vitalsByReference }: CustomVitalsState, nameOrRef: string | DurationVitalReference, options?: DurationVitalOptions): void;
export {};
