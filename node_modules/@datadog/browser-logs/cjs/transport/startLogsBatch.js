"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.startLogsBatch = startLogsBatch;
const browser_core_1 = require("@datadog/browser-core");
function startLogsBatch(configuration, lifeCycle, reportError, pageMayExitObservable, session) {
    const endpoints = [configuration.logsEndpointBuilder];
    if (configuration.replica) {
        endpoints.push(configuration.replica.logsEndpointBuilder);
    }
    const batch = (0, browser_core_1.createBatch)({
        encoder: (0, browser_core_1.createIdentityEncoder)(),
        request: (0, browser_core_1.createHttpRequest)(endpoints, configuration.batchBytesLimit, reportError),
        flushController: (0, browser_core_1.createFlushController)({
            messagesLimit: configuration.batchMessagesLimit,
            bytesLimit: configuration.batchBytesLimit,
            durationLimit: configuration.flushTimeout,
            pageMayExitObservable,
            sessionExpireObservable: session.expireObservable,
        }),
        messageBytesLimit: configuration.messageBytesLimit,
    });
    lifeCycle.subscribe(1 /* LifeCycleEventType.LOG_COLLECTED */, (serverLogsEvent) => {
        batch.add(serverLogsEvent);
    });
    return batch;
}
//# sourceMappingURL=startLogsBatch.js.map