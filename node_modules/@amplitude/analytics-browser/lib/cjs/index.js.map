{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":";;;;AAAA,sDAAsD;AACtD,4FAA8C;AAC9C,mEAA0D;AAAjD,wHAAA,cAAc,OAAA;AAErB,QAAA,GAAG,GAuBD,gCAAM,MAtBR,QAAA,aAAa,GAsBX,gCAAM,gBArBR,QAAA,KAAK,GAqBH,gCAAM,QApBR,QAAA,WAAW,GAoBT,gCAAM,cAnBR,QAAA,WAAW,GAmBT,gCAAM,cAlBR,QAAA,SAAS,GAkBP,gCAAM,YAjBR,QAAA,YAAY,GAiBV,gCAAM,eAhBR,QAAA,SAAS,GAgBP,gCAAM,YAfR,QAAA,aAAa,GAeX,gCAAM,gBAdR,QAAA,QAAQ,GAcN,gCAAM,WAbR,QAAA,IAAI,GAaF,gCAAM,OAZR,QAAA,QAAQ,GAYN,gCAAM,WAXR,QAAA,MAAM,GAWJ,gCAAM,SAVR,QAAA,KAAK,GAUH,gCAAM,QATR,QAAA,OAAO,GASL,gCAAM,UARR,QAAA,WAAW,GAQT,gCAAM,cAPR,QAAA,QAAQ,GAON,gCAAM,WANR,QAAA,SAAS,GAMP,gCAAM,YALR,QAAA,YAAY,GAKV,gCAAM,eAJR,QAAA,YAAY,GAIV,gCAAM,eAHR,QAAA,SAAS,GAGP,gCAAM,YAFR,QAAA,KAAK,GAEH,gCAAM,QADR,QAAA,yBAAyB,GACvB,gCAAM,2BAAC;AACX,mDAAoD;AAA3C,kHAAA,gBAAgB,OAAA;AACzB,yDAA4D;AAAnD,oHAAA,kBAAkB,OAAA;AAC3B,4DAA8D;AAArD,yGAAA,OAAO,OAAA;AAAE,0GAAA,QAAQ,OAAA;AAE1B,0EAA0E;AAC1E,iGAAiG;AACjG,yDAAiC","sourcesContent":["/* eslint-disable @typescript-eslint/unbound-method */\nimport client from './browser-client-factory';\nexport { createInstance } from './browser-client-factory';\nexport const {\n  add,\n  extendSession,\n  flush,\n  getDeviceId,\n  getIdentity,\n  getOptOut,\n  getSessionId,\n  getUserId,\n  groupIdentify,\n  identify,\n  init,\n  logEvent,\n  remove,\n  reset,\n  revenue,\n  setDeviceId,\n  setGroup,\n  setOptOut,\n  setSessionId,\n  setTransport,\n  setUserId,\n  track,\n  _setDiagnosticsSampleRate,\n} = client;\nexport { AmplitudeBrowser } from './browser-client';\nexport { runQueuedFunctions } from './utils/snippet-helper';\nexport { Revenue, Identify } from '@amplitude/analytics-core';\n\n// Export types to maintain backward compatibility with `analytics-types`.\n// In the next major version, only export customer-facing types to reduce the public API surface.\nexport * as Types from './types';\n"]}