name: Unity Cloud Services API Deployment

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'economy/**'
      - 'cloud-code/**'
      - 'remote-config/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
        - staging
        - production

env:
  NODE_VERSION: '22'
  UNITY_PROJECT_ID: ${{ secrets.UNITY_PROJECT_ID }}
  UNITY_ENV_ID: ${{ secrets.UNITY_ENV_ID }}
  UNITY_CLIENT_ID: ${{ secrets.UNITY_CLIENT_ID }}
  UNITY_CLIENT_SECRET: ${{ secrets.UNITY_CLIENT_SECRET }}

jobs:
  deploy-unity-cloud:
    name: Deploy to Unity Cloud Services
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'production' || 'staging') }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Validate Unity Cloud credentials
      run: |
        if [ -z "$UNITY_CLIENT_ID" ] || [ -z "$UNITY_CLIENT_SECRET" ]; then
          echo "❌ Unity Cloud credentials not configured"
          echo "Please set UNITY_CLIENT_ID and UNITY_CLIENT_SECRET secrets"
          exit 1
        fi
        echo "✅ Unity Cloud credentials configured"

    - name: Deploy Economy Data via Unity Cloud API
      run: npm run unity:api-deploy
      env:
        UNITY_PROJECT_ID: ${{ secrets.UNITY_PROJECT_ID }}
        UNITY_ENV_ID: ${{ secrets.UNITY_ENV_ID }}
        UNITY_CLIENT_ID: ${{ secrets.UNITY_CLIENT_ID }}
        UNITY_CLIENT_SECRET: ${{ secrets.UNITY_CLIENT_SECRET }}

    - name: Deploy Cloud Code Functions
      run: |
        echo "Deploying Cloud Code functions..."
        # Add Cloud Code deployment logic here
        # This would use the Unity Cloud API to deploy JavaScript functions

    - name: Deploy Remote Config
      run: |
        echo "Deploying Remote Config..."
        # Add Remote Config deployment logic here
        # This would use the Unity Cloud API to update configuration

    - name: Generate deployment summary
      run: |
        echo "## 🚀 Unity Cloud Services Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "**Status:** ✅ SUCCESS" >> $GITHUB_STEP_SUMMARY
        echo "**Environment:** ${{ github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'production' || 'staging') }}" >> $GITHUB_STEP_SUMMARY
        echo "**Project ID:** ${{ secrets.UNITY_PROJECT_ID }}" >> $GITHUB_STEP_SUMMARY
        echo "**Environment ID:** ${{ secrets.UNITY_ENV_ID }}" >> $GITHUB_STEP_SUMMARY
        echo "**Method:** Unity Cloud Services REST API" >> $GITHUB_STEP_SUMMARY
        echo "**Deployment Time:** $(date)" >> $GITHUB_STEP_SUMMARY