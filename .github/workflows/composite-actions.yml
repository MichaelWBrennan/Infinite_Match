name: Composite Actions

on:
  workflow_call:
    inputs:
      action-type:
        description: 'Type of composite action'
        required: true
        type: string
      environment:
        description: 'Environment to target'
        required: false
        type: string
        default: 'staging'
      node-version:
        description: 'Node.js version to use'
        required: false
        type: string
        default: '22'
      unity-version:
        description: 'Unity version to use'
        required: false
        type: string
        default: '2022.3.20f1'
    secrets:
      UNITY_PROJECT_ID:
        required: true
      UNITY_ENV_ID:
        required: true
      UNITY_CLIENT_ID:
        required: true
      UNITY_CLIENT_SECRET:
        required: true
      UNITY_LICENSE:
        required: true
      UNITY_EMAIL:
        required: true
      UNITY_PASSWORD:
        required: true

env:
  NODE_VERSION: ${{ inputs.node-version }}
  UNITY_VERSION: ${{ inputs.unity-version }}
  UNITY_PROJECT_ID: ${{ secrets.UNITY_PROJECT_ID }}
  UNITY_ENV_ID: ${{ secrets.UNITY_ENV_ID }}
  UNITY_CLIENT_ID: ${{ secrets.UNITY_CLIENT_ID }}
  UNITY_CLIENT_SECRET: ${{ secrets.UNITY_CLIENT_SECRET }}
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}

jobs:
  composite-action:
    name: Composite Action - ${{ inputs.action-type }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Setup Unity
      uses: game-ci/unity-setup@v2
      with:
        unity-version: ${{ env.UNITY_VERSION }}

    - name: Install dependencies
      run: |
        npm ci
        pip install -r requirements.txt

    - name: Run composite action
      run: |
        echo "🚀 Running composite action: ${{ inputs.action-type }}"
        echo "🎯 Environment: ${{ inputs.environment }}"
        echo "📦 Node.js Version: ${{ env.NODE_VERSION }}"
        echo "🎮 Unity Version: ${{ env.UNITY_VERSION }}"
        
        case "${{ inputs.action-type }}" in
          "full-pipeline")
            echo "🔄 Running full pipeline..."
            npm run test
            npm run build
            npm run security
            npm run performance
            npm run deploy:${{ inputs.environment }}
            ;;
          "quick-deploy")
            echo "⚡ Running quick deploy..."
            npm run build
            npm run deploy:${{ inputs.environment }}
            ;;
          "security-scan")
            echo "🔒 Running security scan..."
            npm run security
            npm run performance
            ;;
          "unity-build")
            echo "🎮 Running Unity build..."
            npm run unity:deploy
            ;;
          "economy-update")
            echo "💰 Running economy update..."
            npm run economy:deploy
            ;;
          "health-check")
            echo "🏥 Running health check..."
            npm run health
            npm run monitor
            ;;
          "full-scan")
            echo "🔍 Running full scan..."
            npm run full-scan
            ;;
          *)
            echo "❌ Unknown action type: ${{ inputs.action-type }}"
            exit 1
            ;;
        esac

    - name: Generate action report
      run: |
        echo "# Composite Action Report" > action-report.md
        echo "" >> action-report.md
        echo "## Action Details" >> action-report.md
        echo "- Type: ${{ inputs.action-type }}" >> action-report.md
        echo "- Environment: ${{ inputs.environment }}" >> action-report.md
        echo "- Node.js Version: ${{ env.NODE_VERSION }}" >> action-report.md
        echo "- Unity Version: ${{ env.UNITY_VERSION }}" >> action-report.md
        echo "- Timestamp: $(date)" >> action-report.md
        echo "" >> action-report.md
        echo "## Status" >> action-report.md
        echo "✅ Action completed successfully" >> action-report.md

    - name: Upload action report
      uses: actions/upload-artifact@v4
      with:
        name: action-report-${{ inputs.action-type }}
        path: action-report.md
        retention-days: 30