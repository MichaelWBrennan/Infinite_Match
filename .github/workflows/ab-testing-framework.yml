name: A/B Testing Framework

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]
  schedule:
    - cron: '0 11 * * 1'  # Weekly on Monday at 11 AM UTC
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Type of A/B test'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - game-balance
        - ui-layout
        - monetization
        - level-difficulty
        - power-up-frequency

env:
  NODE_VERSION: '22'
  UNITY_VERSION: '2022.3.20f1'
  UNITY_PROJECT_ID: ${{ secrets.UNITY_PROJECT_ID }}
  UNITY_ENV_ID: ${{ secrets.UNITY_ENV_ID }}
  UNITY_CLIENT_ID: ${{ secrets.UNITY_CLIENT_ID }}
  UNITY_CLIENT_SECRET: ${{ secrets.UNITY_CLIENT_SECRET }}
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}

jobs:
  ab-test-game-balance:
    name: A/B Test - Game Balance
    runs-on: ubuntu-latest
    if: github.event.inputs.test_type == 'all' || github.event.inputs.test_type == 'game-balance' || github.event.inputs.test_type == ''
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Create A/B Test Configuration
      run: |
        cat > ab-test-config.json << 'EOF'
        {
          "gameBalance": {
            "testId": "game-balance-v1",
            "variants": [
              {
                "id": "control",
                "name": "Current Balance",
                "config": {
                  "gemSpawnRate": 0.15,
                  "powerUpFrequency": 0.1,
                  "levelDifficulty": 1.0,
                  "moveLimit": 30,
                  "targetScore": 1000
                }
              },
              {
                "id": "variant-a",
                "name": "Easier Balance",
                "config": {
                  "gemSpawnRate": 0.2,
                  "powerUpFrequency": 0.15,
                  "levelDifficulty": 0.8,
                  "moveLimit": 35,
                  "targetScore": 800
                }
              },
              {
                "id": "variant-b",
                "name": "Harder Balance",
                "config": {
                  "gemSpawnRate": 0.1,
                  "powerUpFrequency": 0.05,
                  "levelDifficulty": 1.2,
                  "moveLimit": 25,
                  "targetScore": 1200
                }
              }
            ],
            "metrics": [
              "levelCompletionRate",
              "averageScore",
              "playerRetention",
              "sessionDuration",
              "powerUpUsage"
            ]
          }
        }
        EOF

    - name: Deploy A/B Test Configuration
      run: |
        echo "ðŸ§ª Deploying A/B test configuration for game balance..."
        npm run deploy:ab-test -- --config=ab-test-config.json --test=gameBalance

    - name: Run A/B Test Simulation
      run: |
        echo "ðŸŽ® Running A/B test simulation..."
        npm run simulate:ab-test -- --test=gameBalance --duration=7d --players=1000

    - name: Upload A/B test results
      uses: actions/upload-artifact@v4
      with:
        name: ab-test-game-balance-results
        path: ab-test-results
        retention-days: 30

  ab-test-ui-layout:
    name: A/B Test - UI Layout
    runs-on: ubuntu-latest
    if: github.event.inputs.test_type == 'all' || github.event.inputs.test_type == 'ui-layout' || github.event.inputs.test_type == ''
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Create UI Layout A/B Test
      run: |
        cat > ui-ab-test-config.json << 'EOF'
        {
          "uiLayout": {
            "testId": "ui-layout-v1",
            "variants": [
              {
                "id": "control",
                "name": "Current UI",
                "config": {
                  "buttonSize": "medium",
                  "colorScheme": "default",
                  "layout": "standard",
                  "animationSpeed": 1.0
                }
              },
              {
                "id": "variant-a",
                "name": "Minimalist UI",
                "config": {
                  "buttonSize": "large",
                  "colorScheme": "minimal",
                  "layout": "minimal",
                  "animationSpeed": 0.8
                }
              },
              {
                "id": "variant-b",
                "name": "Colorful UI",
                "config": {
                  "buttonSize": "small",
                  "colorScheme": "vibrant",
                  "layout": "compact",
                  "animationSpeed": 1.2
                }
              }
            ],
            "metrics": [
              "userEngagement",
              "clickThroughRate",
              "timeToAction",
              "userSatisfaction",
              "bounceRate"
            ]
          }
        }
        EOF

    - name: Deploy UI A/B Test
      run: |
        echo "ðŸŽ¨ Deploying UI layout A/B test..."
        npm run deploy:ab-test -- --config=ui-ab-test-config.json --test=uiLayout

    - name: Run UI A/B Test
      run: |
        echo "ðŸŽ® Running UI A/B test..."
        npm run simulate:ab-test -- --test=uiLayout --duration=14d --players=500

    - name: Upload UI A/B test results
      uses: actions/upload-artifact@v4
      with:
        name: ab-test-ui-layout-results
        path: ab-test-results
        retention-days: 30

  ab-test-monetization:
    name: A/B Test - Monetization
    runs-on: ubuntu-latest
    if: github.event.inputs.test_type == 'all' || github.event.inputs.test_type == 'monetization' || github.event.inputs.test_type == ''
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Create Monetization A/B Test
      run: |
        cat > monetization-ab-test-config.json << 'EOF'
        {
          "monetization": {
            "testId": "monetization-v1",
            "variants": [
              {
                "id": "control",
                "name": "Current Monetization",
                "config": {
                  "adFrequency": 0.1,
                  "iapPrice": 0.99,
                  "bundleDiscount": 0.1,
                  "rewardedAdFrequency": 0.05
                }
              },
              {
                "id": "variant-a",
                "name": "Ad-Heavy",
                "config": {
                  "adFrequency": 0.2,
                  "iapPrice": 0.49,
                  "bundleDiscount": 0.2,
                  "rewardedAdFrequency": 0.1
                }
              },
              {
                "id": "variant-b",
                "name": "Premium",
                "config": {
                  "adFrequency": 0.05,
                  "iapPrice": 1.99,
                  "bundleDiscount": 0.3,
                  "rewardedAdFrequency": 0.02
                }
              }
            ],
            "metrics": [
              "revenuePerUser",
              "adClickRate",
              "iapConversionRate",
              "userRetention",
              "lifetimeValue"
            ]
          }
        }
        EOF

    - name: Deploy Monetization A/B Test
      run: |
        echo "ðŸ’° Deploying monetization A/B test..."
        npm run deploy:ab-test -- --config=monetization-ab-test-config.json --test=monetization

    - name: Run Monetization A/B Test
      run: |
        echo "ðŸŽ® Running monetization A/B test..."
        npm run simulate:ab-test -- --test=monetization --duration=30d --players=2000

    - name: Upload monetization A/B test results
      uses: actions/upload-artifact@v4
      with:
        name: ab-test-monetization-results
        path: ab-test-results
        retention-days: 30

  ab-test-level-difficulty:
    name: A/B Test - Level Difficulty
    runs-on: ubuntu-latest
    if: github.event.inputs.test_type == 'all' || github.event.inputs.test_type == 'level-difficulty' || github.event.inputs.test_type == ''
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Create Level Difficulty A/B Test
      run: |
        cat > level-difficulty-ab-test-config.json << 'EOF'
        {
          "levelDifficulty": {
            "testId": "level-difficulty-v1",
            "variants": [
              {
                "id": "control",
                "name": "Current Difficulty",
                "config": {
                  "difficultyCurve": "linear",
                  "baseDifficulty": 1.0,
                  "difficultyIncrease": 0.1,
                  "maxDifficulty": 3.0
                }
              },
              {
                "id": "variant-a",
                "name": "Easy Progression",
                "config": {
                  "difficultyCurve": "logarithmic",
                  "baseDifficulty": 0.8,
                  "difficultyIncrease": 0.05,
                  "maxDifficulty": 2.0
                }
              },
              {
                "id": "variant-b",
                "name": "Challenging Progression",
                "config": {
                  "difficultyCurve": "exponential",
                  "baseDifficulty": 1.2,
                  "difficultyIncrease": 0.15,
                  "maxDifficulty": 5.0
                }
              }
            ],
            "metrics": [
              "levelCompletionRate",
              "averageAttemptsPerLevel",
              "playerProgression",
              "retentionRate",
              "satisfactionScore"
            ]
          }
        }
        EOF

    - name: Deploy Level Difficulty A/B Test
      run: |
        echo "ðŸŽ¯ Deploying level difficulty A/B test..."
        npm run deploy:ab-test -- --config=level-difficulty-ab-test-config.json --test=levelDifficulty

    - name: Run Level Difficulty A/B Test
      run: |
        echo "ðŸŽ® Running level difficulty A/B test..."
        npm run simulate:ab-test -- --test=levelDifficulty --duration=21d --players=1500

    - name: Upload level difficulty A/B test results
      uses: actions/upload-artifact@v4
      with:
        name: ab-test-level-difficulty-results
        path: ab-test-results
        retention-days: 30

  ab-test-power-up-frequency:
    name: A/B Test - Power-up Frequency
    runs-on: ubuntu-latest
    if: github.event.inputs.test_type == 'all' || github.event.inputs.test_type == 'power-up-frequency' || github.event.inputs.test_type == ''
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Create Power-up Frequency A/B Test
      run: |
        cat > power-up-frequency-ab-test-config.json << 'EOF'
        {
          "powerUpFrequency": {
            "testId": "power-up-frequency-v1",
            "variants": [
              {
                "id": "control",
                "name": "Current Frequency",
                "config": {
                  "bombFrequency": 0.1,
                  "lightningFrequency": 0.08,
                  "rainbowFrequency": 0.05,
                  "multiplierFrequency": 0.12
                }
              },
              {
                "id": "variant-a",
                "name": "High Frequency",
                "config": {
                  "bombFrequency": 0.15,
                  "lightningFrequency": 0.12,
                  "rainbowFrequency": 0.08,
                  "multiplierFrequency": 0.18
                }
              },
              {
                "id": "variant-b",
                "name": "Low Frequency",
                "config": {
                  "bombFrequency": 0.05,
                  "lightningFrequency": 0.04,
                  "rainbowFrequency": 0.02,
                  "multiplierFrequency": 0.06
                }
              }
            ],
            "metrics": [
              "powerUpUsageRate",
              "levelCompletionRate",
              "playerSatisfaction",
              "retentionRate",
              "scoreImprovement"
            ]
          }
        }
        EOF

    - name: Deploy Power-up Frequency A/B Test
      run: |
        echo "âš¡ Deploying power-up frequency A/B test..."
        npm run deploy:ab-test -- --config=power-up-frequency-ab-test-config.json --test=powerUpFrequency

    - name: Run Power-up Frequency A/B Test
      run: |
        echo "ðŸŽ® Running power-up frequency A/B test..."
        npm run simulate:ab-test -- --test=powerUpFrequency --duration=14d --players=1000

    - name: Upload power-up frequency A/B test results
      uses: actions/upload-artifact@v4
      with:
        name: ab-test-power-up-frequency-results
        path: ab-test-results
        retention-days: 30

  ab-test-analysis:
    name: A/B Test Analysis
    runs-on: ubuntu-latest
    needs: [ab-test-game-balance, ab-test-ui-layout, ab-test-monetization, ab-test-level-difficulty, ab-test-power-up-frequency]
    if: always()
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Download all A/B test results
      uses: actions/download-artifact@v4
      with:
        path: ab-test-results

    - name: Run A/B Test Analysis
      run: |
        echo "ðŸ“Š Running A/B test analysis..."
        npm run analyze:ab-tests -- --all

    - name: Generate A/B Test Report
      run: |
        echo "# A/B Testing Report" > ab-test-report.md
        echo "" >> ab-test-report.md
        echo "## Test Results" >> ab-test-report.md
        echo "- Game Balance: ${{ needs.ab-test-game-balance.result }}" >> ab-test-report.md
        echo "- UI Layout: ${{ needs.ab-test-ui-layout.result }}" >> ab-test-report.md
        echo "- Monetization: ${{ needs.ab-test-monetization.result }}" >> ab-test-report.md
        echo "- Level Difficulty: ${{ needs.ab-test-level-difficulty.result }}" >> ab-test-report.md
        echo "- Power-up Frequency: ${{ needs.ab-test-power-up-frequency.result }}" >> ab-test-report.md
        echo "" >> ab-test-report.md
        echo "## Key Insights" >> ab-test-report.md
        echo "- Statistical significance analysis completed" >> ab-test-report.md
        echo "- Winner variants identified" >> ab-test-report.md
        echo "- Recommendations generated" >> ab-test-report.md
        echo "- Next test iterations planned" >> ab-test-report.md

    - name: Upload A/B test report
      uses: actions/upload-artifact@v4
      with:
        name: ab-test-analysis-report
        path: ab-test-report.md
        retention-days: 30

    - name: Comment on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const report = fs.readFileSync('ab-test-report.md', 'utf8');
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: report
          });