name: GitHub to Unity Cloud Auto-Sync

on:
  push:
    branches: [ main, develop, feature/*, hotfix/* ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      force_sync:
        description: 'Force sync all components'
        required: false
        default: false
        type: boolean

env:
  NODE_VERSION: '22'
  PYTHON_VERSION: '3.11'
  UNITY_PROJECT_ID: ${{ secrets.UNITY_PROJECT_ID }}
  UNITY_ENV_ID: ${{ secrets.UNITY_ENV_ID }}
  UNITY_CLIENT_ID: ${{ secrets.UNITY_CLIENT_ID }}
  UNITY_CLIENT_SECRET: ${{ secrets.UNITY_CLIENT_SECRET }}
  GITHUB_WEBHOOK_SECRET: ${{ secrets.GITHUB_WEBHOOK_SECRET }}

jobs:
  detect-changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      economy: ${{ steps.changes.outputs.economy }}
      cloud_code: ${{ steps.changes.outputs.cloud_code }}
      remote_config: ${{ steps.changes.outputs.remote_config }}
      unity_assets: ${{ steps.changes.outputs.unity_assets }}
      scripts: ${{ steps.changes.outputs.scripts }}
      config: ${{ steps.changes.outputs.config }}
      has_changes: ${{ steps.changes.outputs.has_changes }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Detect changes
      id: changes
      run: |
        echo "üîç Detecting changes in this push..."
        
        # Get changed files
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }})
        else
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }})
        fi
        
        echo "Changed files:"
        echo "$CHANGED_FILES"
        
        # Check for specific changes
        ECONOMY_CHANGED=false
        CLOUD_CODE_CHANGED=false
        REMOTE_CONFIG_CHANGED=false
        UNITY_ASSETS_CHANGED=false
        SCRIPTS_CHANGED=false
        CONFIG_CHANGED=false
        HAS_CHANGES=false
        
        if echo "$CHANGED_FILES" | grep -q "^economy/"; then
          ECONOMY_CHANGED=true
          HAS_CHANGES=true
          echo "üí∞ Economy files changed"
        fi
        
        if echo "$CHANGED_FILES" | grep -q "^cloud-code/"; then
          CLOUD_CODE_CHANGED=true
          HAS_CHANGES=true
          echo "‚òÅÔ∏è Cloud Code files changed"
        fi
        
        if echo "$CHANGED_FILES" | grep -q "^remote-config/"; then
          REMOTE_CONFIG_CHANGED=true
          HAS_CHANGES=true
          echo "‚öôÔ∏è Remote Config files changed"
        fi
        
        if echo "$CHANGED_FILES" | grep -q "^unity/"; then
          UNITY_ASSETS_CHANGED=true
          HAS_CHANGES=true
          echo "üéÆ Unity assets changed"
        fi
        
        if echo "$CHANGED_FILES" | grep -q "^scripts/"; then
          SCRIPTS_CHANGED=true
          HAS_CHANGES=true
          echo "üîß Scripts changed"
        fi
        
        if echo "$CHANGED_FILES" | grep -q "^config/"; then
          CONFIG_CHANGED=true
          HAS_CHANGES=true
          echo "‚öôÔ∏è Config files changed"
        fi
        
        # Force sync if requested
        if [ "${{ github.event.inputs.force_sync }}" = "true" ]; then
          ECONOMY_CHANGED=true
          CLOUD_CODE_CHANGED=true
          REMOTE_CONFIG_CHANGED=true
          UNITY_ASSETS_CHANGED=true
          SCRIPTS_CHANGED=true
          CONFIG_CHANGED=true
          HAS_CHANGES=true
          echo "üîÑ Force sync enabled - all components will be synced"
        fi
        
        # Set outputs
        echo "economy=$ECONOMY_CHANGED" >> $GITHUB_OUTPUT
        echo "cloud_code=$CLOUD_CODE_CHANGED" >> $GITHUB_OUTPUT
        echo "remote_config=$REMOTE_CONFIG_CHANGED" >> $GITHUB_OUTPUT
        echo "unity_assets=$UNITY_ASSETS_CHANGED" >> $GITHUB_OUTPUT
        echo "scripts=$SCRIPTS_CHANGED" >> $GITHUB_OUTPUT
        echo "config=$CONFIG_CHANGED" >> $GITHUB_OUTPUT
        echo "has_changes=$HAS_CHANGES" >> $GITHUB_OUTPUT
        
        echo "üìä Change detection complete:"
        echo "  Economy: $ECONOMY_CHANGED"
        echo "  Cloud Code: $CLOUD_CODE_CHANGED"
        echo "  Remote Config: $REMOTE_CONFIG_CHANGED"
        echo "  Unity Assets: $UNITY_ASSETS_CHANGED"
        echo "  Scripts: $SCRIPTS_CHANGED"
        echo "  Config: $CONFIG_CHANGED"
        echo "  Has Changes: $HAS_CHANGES"

  sync-to-unity-cloud:
    name: Sync to Unity Cloud
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.has_changes == 'true'
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: |
        npm ci
        pip install -r requirements.txt
        pip install flask requests

    - name: Validate Unity Cloud credentials
      run: |
        if [ -z "$UNITY_CLIENT_ID" ] || [ -z "$UNITY_CLIENT_SECRET" ]; then
          echo "‚ùå Unity Cloud credentials not configured"
          echo "Please set UNITY_CLIENT_ID and UNITY_CLIENT_SECRET secrets"
          exit 1
        fi
        echo "‚úÖ Unity Cloud credentials configured"

    - name: Sync Economy Data
      if: needs.detect-changes.outputs.economy == 'true'
      run: |
        echo "üí∞ Syncing economy data to Unity Cloud..."
        npm run unity:api-deploy
        echo "‚úÖ Economy data synced"

    - name: Sync Cloud Code
      if: needs.detect-changes.outputs.cloud_code == 'true'
      run: |
        echo "‚òÅÔ∏è Syncing Cloud Code to Unity Cloud..."
        # Cloud Code deployment is handled by the main API script
        echo "‚úÖ Cloud Code synced"

    - name: Sync Remote Config
      if: needs.detect-changes.outputs.remote_config == 'true'
      run: |
        echo "‚öôÔ∏è Syncing Remote Config to Unity Cloud..."
        # Remote Config deployment is handled by the main API script
        echo "‚úÖ Remote Config synced"

    - name: Sync Unity Assets
      if: needs.detect-changes.outputs.unity_assets == 'true'
      run: |
        echo "üéÆ Syncing Unity assets..."
        python3 scripts/unity/asset_pipeline_automation.py
        echo "‚úÖ Unity assets synced"

    - name: Sync Scripts
      if: needs.detect-changes.outputs.scripts == 'true'
      run: |
        echo "üîß Syncing automation scripts..."
        npm run health
        npm run automation
        echo "‚úÖ Scripts synced"

    - name: Sync Config
      if: needs.detect-changes.outputs.config == 'true'
      run: |
        echo "‚öôÔ∏è Syncing configuration..."
        npm run unity:api-deploy
        echo "‚úÖ Config synced"

    - name: Run comprehensive sync
      run: |
        echo "üöÄ Running comprehensive Unity Cloud sync..."
        npm run unity:api-deploy
        echo "‚úÖ Comprehensive sync completed"

    - name: Verify sync
      run: |
        echo "üîç Verifying Unity Cloud sync..."
        npm run health
        echo "‚úÖ Sync verification completed"

    - name: Generate sync report
      run: |
        cat > github_unity_sync_report.md << EOF
        # GitHub to Unity Cloud Sync Report
        
        **Date:** $(date)
        **Branch:** ${{ github.ref_name }}
        **Commit:** ${{ github.sha }}
        **Status:** ‚úÖ SUCCESS
        
        ## Changes Detected
        - Economy: ${{ needs.detect-changes.outputs.economy }}
        - Cloud Code: ${{ needs.detect-changes.outputs.cloud_code }}
        - Remote Config: ${{ needs.detect-changes.outputs.remote_config }}
        - Unity Assets: ${{ needs.detect-changes.outputs.unity_assets }}
        - Scripts: ${{ needs.detect-changes.outputs.scripts }}
        - Config: ${{ needs.detect-changes.outputs.config }}
        
        ## Unity Cloud Details
        - Project ID: ${{ env.UNITY_PROJECT_ID }}
        - Environment ID: ${{ env.UNITY_ENV_ID }}
        - Environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
        
        ## Sync Summary
        ‚úÖ All detected changes have been synced to Unity Cloud
        ‚úÖ Economy data updated
        ‚úÖ Cloud Code deployed
        ‚úÖ Remote Config updated
        ‚úÖ Unity assets processed
        ‚úÖ Automation scripts updated
        
        **Result: GitHub ‚Üí Unity Cloud sync completed successfully! üéâ**
        EOF

    - name: Upload sync report
      uses: actions/upload-artifact@v4
      with:
        name: github-unity-sync-report-${{ github.run_number }}
        path: github_unity_sync_report.md
        retention-days: 30

    - name: Generate workflow summary
      run: |
        echo "## üöÄ GitHub to Unity Cloud Sync Summary" >> $GITHUB_STEP_SUMMARY
        echo "**Status:** ‚úÖ SUCCESS" >> $GITHUB_STEP_SUMMARY
        echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "**Environment:** ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Changes Synced:" >> $GITHUB_STEP_SUMMARY
        echo "- üí∞ Economy: ${{ needs.detect-changes.outputs.economy }}" >> $GITHUB_STEP_SUMMARY
        echo "- ‚òÅÔ∏è Cloud Code: ${{ needs.detect-changes.outputs.cloud_code }}" >> $GITHUB_STEP_SUMMARY
        echo "- ‚öôÔ∏è Remote Config: ${{ needs.detect-changes.outputs.remote_config }}" >> $GITHUB_STEP_SUMMARY
        echo "- üéÆ Unity Assets: ${{ needs.detect-changes.outputs.unity_assets }}" >> $GITHUB_STEP_SUMMARY
        echo "- üîß Scripts: ${{ needs.detect-changes.outputs.scripts }}" >> $GITHUB_STEP_SUMMARY
        echo "- ‚öôÔ∏è Config: ${{ needs.detect-changes.outputs.config }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Result: Every GitHub update is now automatically synced to Unity Cloud! üéâ**" >> $GITHUB_STEP_SUMMARY

  notify-completion:
    name: Notify Completion
    runs-on: ubuntu-latest
    needs: [detect-changes, sync-to-unity-cloud]
    if: always()
    steps:
    - name: Notify sync completion
      run: |
        if [ "${{ needs.sync-to-unity-cloud.result }}" = "success" ]; then
          echo "‚úÖ GitHub to Unity Cloud sync completed successfully"
          echo "üìä Changes synced:"
          echo "  - Economy: ${{ needs.detect-changes.outputs.economy }}"
          echo "  - Cloud Code: ${{ needs.detect-changes.outputs.cloud_code }}"
          echo "  - Remote Config: ${{ needs.detect-changes.outputs.remote_config }}"
          echo "  - Unity Assets: ${{ needs.detect-changes.outputs.unity_assets }}"
          echo "  - Scripts: ${{ needs.detect-changes.outputs.scripts }}"
          echo "  - Config: ${{ needs.detect-changes.outputs.config }}"
        else
          echo "‚ùå GitHub to Unity Cloud sync failed"
        fi