name: Unity Cloud Real Deployment

on:
  workflow_dispatch:
    inputs:
      deployment_type:
        description: 'Type of deployment to run'
        required: true
        default: 'real'
        type: choice
        options:
        - real
        - mock
  push:
    branches: [ main, develop ]
    paths:
      - 'economy/**'
      - 'cloud-code/**'
      - 'scripts/unity_*_cloud_api.py'
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM

env:
  UNITY_PROJECT_ID: ${{ secrets.UNITY_PROJECT_ID }}
  UNITY_ENV_ID: ${{ secrets.UNITY_ENV_ID }}
  UNITY_API_TOKEN: ${{ secrets.UNITY_API_TOKEN }}
  UNITY_CLIENT_ID: ${{ secrets.UNITY_CLIENT_ID }}
  UNITY_CLIENT_SECRET: ${{ secrets.UNITY_CLIENT_SECRET }}
  UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}

jobs:
  unity-cloud-deployment:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install requests selenium flask pyyaml

      - name: Check Unity Cloud credentials
        run: |
          echo "🔍 Checking Unity Cloud credentials..."
          if [ -n "$UNITY_API_TOKEN" ]; then
            echo "✅ UNITY_API_TOKEN: SET"
          else
            echo "❌ UNITY_API_TOKEN: NOT SET"
          fi
          
          if [ -n "$UNITY_CLIENT_ID" ] && [ -n "$UNITY_CLIENT_SECRET" ]; then
            echo "✅ UNITY_CLIENT_ID + UNITY_CLIENT_SECRET: SET"
          else
            echo "❌ UNITY_CLIENT_ID + UNITY_CLIENT_SECRET: NOT SET"
          fi
          
          if [ -n "$UNITY_EMAIL" ] && [ -n "$UNITY_PASSWORD" ]; then
            echo "✅ UNITY_EMAIL + UNITY_PASSWORD: SET"
          else
            echo "❌ UNITY_EMAIL + UNITY_PASSWORD: NOT SET"
          fi

      - name: Run Real Unity Cloud Deployment
        if: github.event.inputs.deployment_type != 'mock' && (env.UNITY_API_TOKEN != '' || (env.UNITY_CLIENT_ID != '' && env.UNITY_CLIENT_SECRET != '') || (env.UNITY_EMAIL != '' && env.UNITY_PASSWORD != ''))
        run: |
          echo "🚀 Running REAL Unity Cloud API deployment..."
          python3 scripts/unity_real_cloud_api.py

      - name: Run Mock Unity Cloud Deployment
        if: github.event.inputs.deployment_type == 'mock' || (env.UNITY_API_TOKEN == '' && env.UNITY_CLIENT_ID == '' && env.UNITY_EMAIL == '')
        run: |
          echo "🔧 Running MOCK Unity Cloud deployment..."
          python3 scripts/unity_headless_cloud_api.py

      - name: Upload deployment reports
        uses: actions/upload-artifact@v4
        with:
          name: unity-cloud-deployment-reports
          path: |
            unity_cloud_*_deployment_report.json
            economy_conversion_report.md
            UNITY_DASHBOARD_SETUP_INSTRUCTIONS.md
          retention-days: 30

      - name: Create deployment summary
        run: |
          cat > deployment_summary.md << EOF
          # Unity Cloud Deployment Summary
          
          **Date:** $(date)
          **Trigger:** ${{ github.event_name }}
          **Branch:** ${{ github.ref_name }}
          **Commit:** ${{ github.sha }}
          
          ## Deployment Type
          ${{ github.event.inputs.deployment_type || 'automatic' }}
          
          ## Credentials Status
          - UNITY_API_TOKEN: ${{ env.UNITY_API_TOKEN != '' && 'SET' || 'NOT SET' }}
          - UNITY_CLIENT_ID: ${{ env.UNITY_CLIENT_ID != '' && 'SET' || 'NOT SET' }}
          - UNITY_CLIENT_SECRET: ${{ env.UNITY_CLIENT_SECRET != '' && 'SET' || 'NOT SET' }}
          - UNITY_EMAIL: ${{ env.UNITY_EMAIL != '' && 'SET' || 'NOT SET' }}
          - UNITY_PASSWORD: ${{ env.UNITY_PASSWORD != '' && 'SET' || 'NOT SET' }}
          
          ## Project Details
          - Project ID: ${{ env.UNITY_PROJECT_ID }}
          - Environment ID: ${{ env.UNITY_ENV_ID }}
          
          ## Results
          Check the uploaded artifacts for detailed deployment reports.
          EOF

      - name: Upload deployment summary
        uses: actions/upload-artifact@v4
        with:
          name: deployment-summary
          path: deployment_summary.md
          retention-days: 30

      - name: Comment on PR (if applicable)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let summary = 'Unity Cloud deployment completed!';
            
            try {
              const report = fs.readFileSync('unity_cloud_headless_deployment_report.json', 'utf8');
              const data = JSON.parse(report);
              summary = `Unity Cloud deployment completed!\n\n**Results:**\n- Currencies: ${data.results.currencies.length}\n- Inventory Items: ${data.results.inventory_items.length}\n- Virtual Purchases: ${data.results.virtual_purchases.length}\n- Cloud Code Functions: ${data.results.cloud_code_functions.length}\n- Remote Config: ${data.results.remote_config ? 'Updated' : 'Failed'}`;
            } catch (e) {
              console.log('Could not read deployment report');
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });