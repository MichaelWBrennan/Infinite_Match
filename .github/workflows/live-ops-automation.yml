name: Live Ops Automation

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]
  schedule:
    - cron: '0 12 * * 1'  # Weekly on Monday at 12 PM UTC
  workflow_dispatch:
    inputs:
      operation_type:
        description: 'Type of live operation'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - daily-events
        - weekly-events
        - seasonal-events
        - emergency-fixes
        - content-updates
        - balance-updates

env:
  NODE_VERSION: '22'
  UNITY_VERSION: '2022.3.20f1'
  UNITY_PROJECT_ID: ${{ secrets.UNITY_PROJECT_ID }}
  UNITY_ENV_ID: ${{ secrets.UNITY_ENV_ID }}
  UNITY_CLIENT_ID: ${{ secrets.UNITY_CLIENT_ID }}
  UNITY_CLIENT_SECRET: ${{ secrets.UNITY_CLIENT_SECRET }}
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}

jobs:
  daily-events:
    name: Daily Events Automation
    runs-on: ubuntu-latest
    if: github.event.inputs.operation_type == 'all' || github.event.inputs.operation_type == 'daily-events' || github.event.inputs.operation_type == ''
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Create Daily Events Configuration
      run: |
        cat > daily-events-config.json << 'EOF'
        {
          "dailyEvents": {
            "events": [
              {
                "id": "daily-bonus",
                "name": "Daily Login Bonus",
                "type": "reward",
                "schedule": "daily",
                "time": "00:00",
                "timezone": "UTC",
                "config": {
                  "rewardType": "coins",
                  "rewardAmount": 100,
                  "multiplier": 1.0,
                  "maxStreak": 7
                }
              },
              {
                "id": "daily-challenge",
                "name": "Daily Challenge",
                "type": "challenge",
                "schedule": "daily",
                "time": "06:00",
                "timezone": "UTC",
                "config": {
                  "challengeType": "score",
                  "targetScore": 5000,
                  "rewardType": "gems",
                  "rewardAmount": 10
                }
              },
              {
                "id": "daily-sale",
                "name": "Daily Sale",
                "type": "monetization",
                "schedule": "daily",
                "time": "12:00",
                "timezone": "UTC",
                "config": {
                  "discountPercent": 50,
                  "itemType": "powerUps",
                  "duration": 24
                }
              }
            ]
          }
        }
        EOF

    - name: Deploy Daily Events
      run: |
        echo "📅 Deploying daily events..."
        npm run deploy:live-events -- --config=daily-events-config.json --type=daily

    - name: Verify Daily Events
      run: |
        echo "✅ Verifying daily events deployment..."
        npm run verify:live-events -- --type=daily

    - name: Upload daily events results
      uses: actions/upload-artifact@v4
      with:
        name: daily-events-results
        path: live-ops-results
        retention-days: 30

  weekly-events:
    name: Weekly Events Automation
    runs-on: ubuntu-latest
    if: github.event.inputs.operation_type == 'all' || github.event.inputs.operation_type == 'weekly-events' || github.event.inputs.operation_type == ''
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Create Weekly Events Configuration
      run: |
        cat > weekly-events-config.json << 'EOF'
        {
          "weeklyEvents": {
            "events": [
              {
                "id": "weekly-tournament",
                "name": "Weekly Tournament",
                "type": "competition",
                "schedule": "weekly",
                "day": "monday",
                "time": "00:00",
                "timezone": "UTC",
                "config": {
                  "duration": 7,
                  "maxParticipants": 1000,
                  "rewardTiers": [
                    {"rank": 1, "reward": "1000 coins"},
                    {"rank": 2, "reward": "500 coins"},
                    {"rank": 3, "reward": "250 coins"}
                  ]
                }
              },
              {
                "id": "weekly-special-levels",
                "name": "Weekly Special Levels",
                "type": "content",
                "schedule": "weekly",
                "day": "monday",
                "time": "06:00",
                "timezone": "UTC",
                "config": {
                  "levelCount": 5,
                  "difficulty": "hard",
                  "rewardMultiplier": 2.0
                }
              },
              {
                "id": "weekly-bundle",
                "name": "Weekly Bundle Sale",
                "type": "monetization",
                "schedule": "weekly",
                "day": "friday",
                "time": "12:00",
                "timezone": "UTC",
                "config": {
                  "discountPercent": 30,
                  "bundleType": "starter",
                  "duration": 72
                }
              }
            ]
          }
        }
        EOF

    - name: Deploy Weekly Events
      run: |
        echo "📅 Deploying weekly events..."
        npm run deploy:live-events -- --config=weekly-events-config.json --type=weekly

    - name: Verify Weekly Events
      run: |
        echo "✅ Verifying weekly events deployment..."
        npm run verify:live-events -- --type=weekly

    - name: Upload weekly events results
      uses: actions/upload-artifact@v4
      with:
        name: weekly-events-results
        path: live-ops-results
        retention-days: 30

  seasonal-events:
    name: Seasonal Events Automation
    runs-on: ubuntu-latest
    if: github.event.inputs.operation_type == 'all' || github.event.inputs.operation_type == 'seasonal-events' || github.event.inputs.operation_type == ''
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Create Seasonal Events Configuration
      run: |
        cat > seasonal-events-config.json << 'EOF'
        {
          "seasonalEvents": {
            "events": [
              {
                "id": "halloween-event",
                "name": "Halloween Spooky Match",
                "type": "seasonal",
                "schedule": "seasonal",
                "startDate": "2024-10-25",
                "endDate": "2024-11-01",
                "config": {
                  "theme": "halloween",
                  "specialGems": ["pumpkin", "ghost", "witch"],
                  "rewardMultiplier": 1.5,
                  "specialLevels": 10
                }
              },
              {
                "id": "christmas-event",
                "name": "Christmas Holiday Match",
                "type": "seasonal",
                "schedule": "seasonal",
                "startDate": "2024-12-20",
                "endDate": "2025-01-05",
                "config": {
                  "theme": "christmas",
                  "specialGems": ["snowflake", "gift", "reindeer"],
                  "rewardMultiplier": 2.0,
                  "specialLevels": 15
                }
              },
              {
                "id": "valentines-event",
                "name": "Valentine's Sweet Match",
                "type": "seasonal",
                "schedule": "seasonal",
                "startDate": "2025-02-10",
                "endDate": "2025-02-17",
                "config": {
                  "theme": "valentines",
                  "specialGems": ["heart", "chocolate", "rose"],
                  "rewardMultiplier": 1.3,
                  "specialLevels": 8
                }
              }
            ]
          }
        }
        EOF

    - name: Deploy Seasonal Events
      run: |
        echo "🎃 Deploying seasonal events..."
        npm run deploy:live-events -- --config=seasonal-events-config.json --type=seasonal

    - name: Verify Seasonal Events
      run: |
        echo "✅ Verifying seasonal events deployment..."
        npm run verify:live-events -- --type=seasonal

    - name: Upload seasonal events results
      uses: actions/upload-artifact@v4
      with:
        name: seasonal-events-results
        path: live-ops-results
        retention-days: 30

  emergency-fixes:
    name: Emergency Fixes Automation
    runs-on: ubuntu-latest
    if: github.event.inputs.operation_type == 'all' || github.event.inputs.operation_type == 'emergency-fixes' || github.event.inputs.operation_type == ''
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Create Emergency Fix Configuration
      run: |
        cat > emergency-fixes-config.json << 'EOF'
        {
          "emergencyFixes": {
            "fixes": [
              {
                "id": "crash-fix",
                "name": "Critical Crash Fix",
                "type": "stability",
                "priority": "critical",
                "config": {
                  "hotfix": true,
                  "rollbackOnFailure": true,
                  "notificationRequired": true
                }
              },
              {
                "id": "balance-fix",
                "name": "Game Balance Fix",
                "type": "gameplay",
                "priority": "high",
                "config": {
                  "hotfix": false,
                  "rollbackOnFailure": false,
                  "notificationRequired": true
                }
              },
              {
                "id": "monetization-fix",
                "name": "Monetization Fix",
                "type": "monetization",
                "priority": "high",
                "config": {
                  "hotfix": true,
                  "rollbackOnFailure": true,
                  "notificationRequired": true
                }
              }
            ]
          }
        }
        EOF

    - name: Deploy Emergency Fixes
      run: |
        echo "🚨 Deploying emergency fixes..."
        npm run deploy:emergency-fixes -- --config=emergency-fixes-config.json

    - name: Verify Emergency Fixes
      run: |
        echo "✅ Verifying emergency fixes deployment..."
        npm run verify:emergency-fixes

    - name: Upload emergency fixes results
      uses: actions/upload-artifact@v4
      with:
        name: emergency-fixes-results
        path: live-ops-results
        retention-days: 30

  content-updates:
    name: Content Updates Automation
    runs-on: ubuntu-latest
    if: github.event.inputs.operation_type == 'all' || github.event.inputs.operation_type == 'content-updates' || github.event.inputs.operation_type == ''
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Create Content Updates Configuration
      run: |
        cat > content-updates-config.json << 'EOF'
        {
          "contentUpdates": {
            "updates": [
              {
                "id": "new-levels",
                "name": "New Levels Pack",
                "type": "levels",
                "config": {
                  "levelCount": 20,
                  "difficulty": "progressive",
                  "theme": "default"
                }
              },
              {
                "id": "new-power-ups",
                "name": "New Power-ups",
                "type": "powerups",
                "config": {
                  "powerUpTypes": ["rainbow", "bomb", "lightning"],
                  "rarity": "common"
                }
              },
              {
                "id": "new-gems",
                "name": "New Gem Types",
                "type": "gems",
                "config": {
                  "gemTypes": ["diamond", "emerald", "ruby"],
                  "specialEffects": true
                }
              }
            ]
          }
        }
        EOF

    - name: Deploy Content Updates
      run: |
        echo "📦 Deploying content updates..."
        npm run deploy:content-updates -- --config=content-updates-config.json

    - name: Verify Content Updates
      run: |
        echo "✅ Verifying content updates deployment..."
        npm run verify:content-updates

    - name: Upload content updates results
      uses: actions/upload-artifact@v4
      with:
        name: content-updates-results
        path: live-ops-results
        retention-days: 30

  balance-updates:
    name: Balance Updates Automation
    runs-on: ubuntu-latest
    if: github.event.inputs.operation_type == 'all' || github.event.inputs.operation_type == 'balance-updates' || github.event.inputs.operation_type == ''
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Create Balance Updates Configuration
      run: |
        cat > balance-updates-config.json << 'EOF'
        {
          "balanceUpdates": {
            "updates": [
              {
                "id": "gem-spawn-balance",
                "name": "Gem Spawn Rate Balance",
                "type": "gameplay",
                "config": {
                  "gemSpawnRate": 0.15,
                  "previousRate": 0.12,
                  "reason": "Player feedback indicates difficulty too high"
                }
              },
              {
                "id": "power-up-balance",
                "name": "Power-up Frequency Balance",
                "type": "gameplay",
                "config": {
                  "powerUpFrequency": 0.1,
                  "previousFrequency": 0.08,
                  "reason": "Increase player satisfaction"
                }
              },
              {
                "id": "score-balance",
                "name": "Score Calculation Balance",
                "type": "gameplay",
                "config": {
                  "scoreMultiplier": 1.2,
                  "previousMultiplier": 1.0,
                  "reason": "Reward skilled players more"
                }
              }
            ]
          }
        }
        EOF

    - name: Deploy Balance Updates
      run: |
        echo "⚖️ Deploying balance updates..."
        npm run deploy:balance-updates -- --config=balance-updates-config.json

    - name: Verify Balance Updates
      run: |
        echo "✅ Verifying balance updates deployment..."
        npm run verify:balance-updates

    - name: Upload balance updates results
      uses: actions/upload-artifact@v4
      with:
        name: balance-updates-results
        path: live-ops-results
        retention-days: 30

  live-ops-summary:
    name: Live Ops Summary
    runs-on: ubuntu-latest
    needs: [daily-events, weekly-events, seasonal-events, emergency-fixes, content-updates, balance-updates]
    if: always()
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Download all live ops results
      uses: actions/download-artifact@v4
      with:
        path: live-ops-results

    - name: Generate Live Ops Report
      run: |
        echo "# Live Ops Automation Report" > live-ops-report.md
        echo "" >> live-ops-report.md
        echo "## Operation Results" >> live-ops-report.md
        echo "- Daily Events: ${{ needs.daily-events.result }}" >> live-ops-report.md
        echo "- Weekly Events: ${{ needs.weekly-events.result }}" >> live-ops-report.md
        echo "- Seasonal Events: ${{ needs.seasonal-events.result }}" >> live-ops-report.md
        echo "- Emergency Fixes: ${{ needs.emergency-fixes.result }}" >> live-ops-report.md
        echo "- Content Updates: ${{ needs.content-updates.result }}" >> live-ops-report.md
        echo "- Balance Updates: ${{ needs.balance-updates.result }}" >> live-ops-report.md
        echo "" >> live-ops-report.md
        echo "## Live Ops Features" >> live-ops-report.md
        echo "- Automated event scheduling" >> live-ops-report.md
        echo "- Real-time content updates" >> live-ops-report.md
        echo "- Emergency response system" >> live-ops-report.md
        echo "- Balance adjustment automation" >> live-ops-report.md
        echo "- Player notification system" >> live-ops-report.md

    - name: Upload live ops report
      uses: actions/upload-artifact@v4
      with:
        name: live-ops-summary-report
        path: live-ops-report.md
        retention-days: 30