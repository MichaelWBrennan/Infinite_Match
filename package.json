{
  "author": "Your Team",
  "dependencies": {
    "@apollo/server": "^4.10.0",
    "@graphql-tools/schema": "^10.0.0",
    "@graphql-tools/utils": "^10.0.0",
    "@nestjs/common": "^10.3.0",
    "@nestjs/core": "^10.3.0",
    "@nestjs/platform-express": "^10.3.0",
    "@nestjs/swagger": "^7.2.0",
    "@prisma/client": "^5.8.0",
    "apollo-server-express": "^3.12.1",
    "bcryptjs": "^2.4.3",
    "bull": "^4.12.0",
    "bullmq": "^4.15.0",
    "chalk": "^4.1.2",
    "commander": "^11.1.0",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "dotenv": "^17.2.3",
    "express": "^4.18.2",
    "express-mongo-sanitize": "^2.2.0",
    "express-rate-limit": "^7.1.5",
    "express-slow-down": "^2.0.1",
    "express-validator": "^7.0.1",
    "graphql": "^16.8.1",
    "graphql-subscriptions": "^2.0.0",
    "graphql-ws": "^5.14.0",
    "helmet": "^7.1.0",
    "hpp": "^0.2.3",
    "ioredis": "^5.3.2",
    "jsonwebtoken": "^9.0.2",
    "mongoose": "^8.0.3",
    "node-fetch": "^3.3.2",
    "prisma": "^5.8.0",
    "redis": "^4.6.12",
    "socket.io": "^4.7.4",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.0",
    "uuid": "^13.0.0",
    "winston": "^3.11.0",
    "winston-daily-rotate-file": "^4.7.1",
    "ws": "^8.14.2",
    "xss": "^1.0.14"
  },
  "description": "Evergreen Match-3 Unity Game with comprehensive automation and CI/CD",
  "devDependencies": {
    "@eslint/js": "^9.37.0",
    "@jest/globals": "^30.2.0",
    "@nestjs/testing": "^10.3.0",
    "@types/bcryptjs": "^2.4.6",
    "@types/compression": "^1.7.5",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.5.11",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/node": "^24.7.0",
    "@types/supertest": "^6.0.2",
    "@types/uuid": "^9.0.7",
    "@types/ws": "^8.5.10",
    "@typescript-eslint/eslint-config-recommended": "^6.21.0",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "eslint": "^8.57.0",
    "eslint-formatter-compact": "^8.40.0",
    "jest": "^29.7.0",
    "nodemon": "^3.0.2",
    "prettier": "^3.6.2",
    "supertest": "^7.1.4",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.2",
    "typescript": "^5.3.3"
  },
  "engines": {
    "node": ">=20.0.0",
    "npm": ">=10.0.0"
  },
  "keywords": [
    "unity",
    "match3",
    "mobile-game",
    "automation",
    "ci-cd",
    "nodejs",
    "express"
  ],
  "license": "MIT",
  "main": "src/server/index.js",
  "name": "evergreen-match3-unity",
  "scripts": {
    "ab:analyze": "echo 'A/B test analysis via GitHub Actions'",
    "ab:deploy": "echo 'A/B test deployment via GitHub Actions'",
    "automation": "node scripts/refactored-automation.js",
    "automation:legacy": "node scripts/automation.js",
    "build": "tsc && npm run build:graphql",
    "build:graphql": "node scripts/generate-graphql-schema.js",
    "build:microservices": "docker-compose build",
    "build:production": "npm run build && npm run prisma:generate",
    "dashboard": "node scripts/deployment-dashboard.js",
    "deploy:all": "npm run health && npm run automation",
    "deploy:microservices": "docker-compose up -d",
    "dev": "nodemon --exec ts-node src/server/index.ts",
    "dev:graphql": "nodemon --exec ts-node src/graphql/server.ts",
    "dev:microservices": "docker-compose -f docker-compose.dev.yml up",
    "error-recovery": "node scripts/error-recovery.js",
    "format": "prettier --write \"src/**/*.{js,ts,json}\"",
    "format:check": "prettier --check \"src/**/*.{js,ts,json}\"",
    "full-scan": "npm run security && npm run performance && npm run error-recovery",
    "full-status": "npm run status && npm run dashboard && npm run monitor",
    "generate:prisma": "prisma generate",
    "graphql:playground": "npm run dev:graphql",
    "health": "node scripts/refactored-health-check.js",
    "health:legacy": "node scripts/health-check.js",
    "lint": "eslint src/ --ext .js,.ts",
    "lint:fix": "eslint src/ --ext .js,.ts --fix",
    "live-ops:deploy": "echo 'Live ops deployment via GitHub Actions'",
    "live-ops:verify": "echo 'Live ops verification via GitHub Actions'",
    "migrate": "prisma migrate dev",
    "migrate:deploy": "prisma migrate deploy",
    "migrate:reset": "prisma migrate reset",
    "monitor": "node scripts/health-monitor.js",
    "notify": "node scripts/notification-system.js",
    "performance": "node scripts/performance-monitor.js",
    "prisma:generate": "prisma generate",
    "prisma:studio": "prisma studio",
    "security": "node scripts/security-scanner.js",
    "start": "node dist/server/index.js",
    "start:dev": "ts-node src/server/index.ts",
    "start:microservices": "docker-compose up -d",
    "status": "node scripts/status-check.js",
    "test": "jest",
    "test:ab": "echo 'A/B tests run via GitHub Actions'",
    "test:coverage": "jest --coverage",
    "test:e2e": "jest --config jest-e2e.json",
    "test:live-ops": "echo 'Live ops tests run via GitHub Actions'",
    "test:unity": "echo 'Unity tests run via GitHub Actions'",
    "unity:deploy": "node scripts/unity-deploy.js",
    "unity:secrets": "node scripts/unity/fetch-unity-secrets.js",
    "unity:deploy-cloud-code": "node scripts/unity/deploy-cloud-code.js",
    "unity:deploy-economy": "python3 scripts/unity/deploy-economy-with-credentials.py",
    "unity:deploy-all": "./unity-cli-working deploy-all"
  },
  "type": "module",
  "version": "1.0.0",
  "workspaces": [
    "scripts"
  ]
}
