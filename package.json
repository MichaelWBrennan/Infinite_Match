{
  "author": "Your Team",
  "dependencies": {
    "bcryptjs": "^2.4.3",
    "chalk": "^4.1.2",
    "commander": "^11.1.0",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "dotenv": "^17.2.3",
    "express": "^4.18.2",
    "express-mongo-sanitize": "^2.2.0",
    "express-rate-limit": "^7.1.5",
    "express-slow-down": "^2.0.1",
    "express-validator": "^7.0.1",
    "helmet": "^7.1.0",
    "hpp": "^0.2.3",
    "jsonwebtoken": "^9.0.2",
    "node-fetch": "^3.3.2",
    "uuid": "^13.0.0",
    "winston": "^3.11.0",
    "winston-daily-rotate-file": "^4.7.1",
    "xss": "^1.0.14"
  },
  "description": "Evergreen Match-3 Unity Game with comprehensive automation and CI/CD",
  "devDependencies": {
    "@eslint/js": "^9.37.0",
    "@jest/globals": "^30.2.0",
    "@types/node": "^24.7.0",
    "@typescript-eslint/eslint-config-recommended": "^6.21.0",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "eslint": "^8.57.0",
    "eslint-formatter-compact": "^8.40.0",
    "jest": "^29.7.0",
    "nodemon": "^3.0.2",
    "prettier": "^3.6.2",
    "supertest": "^7.1.4",
    "typescript": "^5.0.0"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "keywords": [
    "unity",
    "match3",
    "mobile-game",
    "automation",
    "ci-cd",
    "nodejs",
    "express"
  ],
  "license": "MIT",
  "main": "src/server/index.js",
  "name": "evergreen-match3-unity",
  "scripts": {
    "ab:analyze": "echo 'A/B test analysis via GitHub Actions'",
    "ab:deploy": "echo 'A/B test deployment via GitHub Actions'",
    "automation": "node scripts/refactored-automation.js",
    "automation:legacy": "node scripts/automation.js",
    "build": "echo 'No build step required for Node.js'",
    "dashboard": "node scripts/deployment-dashboard.js",
    "deploy:all": "npm run health && npm run automation",
    "dev": "nodemon src/server/index.js",
    "error-recovery": "node scripts/error-recovery.js",
    "format": "prettier --write \"src/**/*.{js,ts,json}\"",
    "format:check": "prettier --check \"src/**/*.{js,ts,json}\"",
    "full-scan": "npm run security && npm run performance && npm run error-recovery",
    "full-status": "npm run status && npm run dashboard && npm run monitor",
    "health": "node scripts/refactored-health-check.js",
    "health:legacy": "node scripts/health-check.js",
    "lint": "eslint src/ --ext .js,.ts",
    "lint:fix": "eslint src/ --ext .js,.ts --fix",
    "live-ops:deploy": "echo 'Live ops deployment via GitHub Actions'",
    "live-ops:verify": "echo 'Live ops verification via GitHub Actions'",
    "migrate": "node scripts/database-migration.js",
    "monitor": "node scripts/health-monitor.js",
    "notify": "node scripts/notification-system.js",
    "performance": "node scripts/performance-monitor.js",
    "security": "node scripts/security-scanner.js",
    "start": "node src/server/index.js",
    "status": "node scripts/status-check.js",
    "test": "node --experimental-vm-modules node_modules/jest/bin/jest.js",
    "test:ab": "echo 'A/B tests run via GitHub Actions'",
    "test:live-ops": "echo 'Live ops tests run via GitHub Actions'",
    "test:unity": "echo 'Unity tests run via GitHub Actions'",
    "unity:deploy": "node scripts/unity-deploy.js",
    "unity:secrets": "node scripts/unity/fetch-unity-secrets.js",
    "unity:test": "echo 'Unity Test Framework integration via GitHub Actions'",
    "test:cursor-secrets": "node scripts/test-cursor-secrets.js",
    "unity:test-headless": "python3 scripts/unity/test-headless-unity-connection.py",
    "unity:headless-ping": "python3 scripts/unity/test-headless-unity-connection.py",
    "unity:test-account-access": "python3 scripts/unity/test-unity-account-access.py",
    "unity:test-account-visibility": "python3 scripts/unity/test-headless-account-visibility.py",
    "unity:check-dashboard": "python3 scripts/unity/check-unity-cloud-dashboard.py",
    "unity:extract-data": "python3 scripts/unity/extract-unity-cloud-data.py",
    "unity:extract-data-advanced": "python3 scripts/unity/extract-unity-cloud-data-advanced.py",
    "unity:check-services": "python3 scripts/unity/check-unity-cloud-services.py",
    "unity:read-account": "python3 scripts/unity/read-unity-cloud-account.py",
    "unity:read-actual-account": "python3 scripts/unity/read-actual-unity-cloud-account.py",
    "unity:headless-read": "python3 scripts/unity/headless-unity-cloud-reader.py",
    "unity:deploy-cloud-code": "node scripts/unity/deploy-cloud-code.js",
    "unity:test-cloud-code": "node scripts/unity/deploy-cloud-code.js",
    "unity:api": "node src/unity-cloud-cli.js",
    "unity:deploy-api": "node src/unity-cloud-cli.js deploy",
    "unity:sync-api": "node src/unity-cloud-cli.js sync",
    "unity:status-api": "node src/unity-cloud-cli.js status",
    "unity:health-api": "node src/unity-cloud-cli.js health",
    "unity:economy-api": "node src/unity-cloud-cli.js economy --list",
    "unity:cloud-code-api": "node src/unity-cloud-cli.js cloud-code --list",
    "unity:remote-config-api": "node src/unity-cloud-cli.js remote-config --list",
    "unity:analytics-api": "node src/unity-cloud-cli.js analytics --list",
    "unity:test-api": "node scripts/test-unity-cloud-api.js",
    "unity:example-api": "node scripts/unity-cloud-api-example.js"
  },
  "type": "module",
  "version": "1.0.0",
  "workspaces": [
    "scripts"
  ]
}
